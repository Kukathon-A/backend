name: Java CI with Gradle

# develop 브랜치에 푸쉬 or PR 시 동작
on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]
    
# 진행 과정
jobs:
  deploy:
    runs-on: ubuntu-latest # 가장 최근 우분투 버전으로 실행
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17 # JDK 버전 17 사용
        uses: actions/setup-java@v3 
        with:
          java-version: '17'
          distribution: 'adopt'
          
      - name: Set YML # 시크릿에 있는 yml 파일 사용
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" | base64 --decode > src/main/resources/application.yml
          find src
          
      - name: 저장소 Checkout
        uses: actions/checkout@v3

      - name: 스프링부트 애플리케이션 빌드 # (1)
        run: cd backend && ./gradlew build # 백엔드 디렉토리로 이동 후 빌드

      - name: 도커 이미지 빌드 # (2)
	      # 백엔드 디렉토리로 이동 후 도커 이미지 빌드
        run: cd backend && docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/kukathon-A .

      - name: Docker Hub 로그인 # (3)
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker Hub 퍼블리시 # (4)
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/kukathon-A

      - name: WAS 인스턴스 접속 및 애플리케이션 실행 # (5)
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo docker stop $(sudo docker ps -a -q) 
            sudo docker rm $(sudo docker ps -a -q)  
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/kukathon-A
            sudo docker run -d -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/kukathon-A
